import {*} from "./assert"

type One = Int {
    constructor(x: Int) => x
    
    fn add(r: Int) -> Int this.getInner() + r

    fn set(x: Int) -> Void this.setInner(x)
}

fn testOne() => {
    let oneOne = new One(3)
    assert.assert(oneOne.add(4) == 7)

    oneOne.set(11)
    assert.assert(oneOne.add(4) == 15)
}

type Two<T> = __Array<T> {
    constructor(x: __Array<T>) => x

    fn head() -> T {
        this.getInner()[0]
    }
}

fn testTwo() => {
    /*
    let oneTwo = new Two<Int>(__static __Array<Int>[12001, 12002])
    assert.assert(oneTwo.head() == 12001)
    */
}

export fn test() -> Void {
    testOne()
    testTwo()
}